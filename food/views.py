"""
Views associated with the 'food' app
"""

from django.http import HttpResponseRedirect
from django.contrib.auth.decorators import login_required
from django.shortcuts import render_to_response
from django.template import RequestContext
from django.core.context_processors import csrf
from food.forms import FoodForm
from food.models import *
from random import choice

# Create your views here.


@login_required
def submit(request):
    """
    Displays the food submit form and handles the food creation action.
    Requires user to be logged in.
    """
    if request.method == 'POST':
        form = FoodForm(request.POST, request.FILES)
        if form.is_valid():
            form.save()
            return HttpResponseRedirect('/food/submitsuccess/')
    else:
        form = FoodForm()
    context = {'form': form}
    context.update(csrf(request))
    return render_to_response('submit.html', context,
                              context_instance=RequestContext(request))


@login_required
def edit(request, foodslug, food_id):
    """
    Displays the food_item edit form and handles the food_item edit info action.
    Requires user to be logged in.
    """
    food_item = Food.objects.get(id=food_id)
    if request.method == 'POST':
        form = FoodForm(request.POST, request.FILES, instance=food_item)
        if form.is_valid():
            form.save()
            return HttpResponseRedirect(food_item.get_absolute_url())
    else:
        form = FoodForm(instance=food_item)
    context = {'form': form}
    context.update(csrf(request))
    return render_to_response('edit.html', context,
                              context_instance=RequestContext(request))


def food_index(request):
    """
    Displays a list of all Food objects.
    """
    food_index = Food.objects.order_by('name')
    context = {'food_index': food_index}
    context.update(csrf(request))
    return render_to_response('food_index.html', context,
                              context_instance=RequestContext(request))


def food(request, foodslug, food_id):
    """
    Displays the details of a specific Food object.
    """
    food = Food.objects.get(id=food_id)
    context = {'food': food}
    return render_to_response('food.html', context,
                              context_instance=RequestContext(request))


NoStrings = ["NO, YOU DON'T KNOW ME!", "GIVE ME SOMETHING ELSE!", "I WOULD NEVER EAT THAT!",
             "REALLY? I'M NOT EATING THAT!", "NEXT, PLEASE!"]
YesStrings = ["YEAH, HOW'D YOU KNOW?", "TELL ME MORE INTERNET!", "MMM, MAKING ME HUNGRY!", "YES I AM!",
              "SHOW ME THE GOODS!"]


def what_to_eat(request):
    """
    Displays the random Food object generated by the random_food() helper
    function.
    """
    food = random_food()
    nostring = choice(NoStrings)
    yesstring = choice(YesStrings)
    context = {'food': food, 'noString': nostring, 'yesString': yesstring}
    return render_to_response('what_to_eat.html', context,
                              context_instance=RequestContext(request))


def food_of_the_day(request):
    """
    Displays the most popular Food object.
    """
    return render_to_response('food_of_the_day.html',
                              context_instance=RequestContext(request))


def category_index(request):
    """
    Displays a list of all Category objects.
    """
    category_index = Category.objects.order_by('name')
    context = {'category_index': category_index}
    return render_to_response('category_index.html', context,
                              context_instance=RequestContext(request))


def category(request, categoryslug):
    """
    Displays a list of all Food objects with the specified Category.
    """
    category = Category.objects.get(slug=categoryslug)
    food_list = Food.objects.filter(category=category).order_by('name')
    context = {'category': category, 'food_list': food_list}
    return render_to_response('category.html', context,
                              context_instance=RequestContext(request))


def restaurant_index(request):
    """
    Displays a list of all Restaurant objects.
    """
    restaurant_index = Restaurant.objects.order_by('name')
    context = {'restaurant_index': restaurant_index}
    return render_to_response('restaurant_index.html', context,
                              context_instance=RequestContext(request))


def restaurant(request, restaurantslug):
    """
    Displays a list of Food objects with the specified Restaurant.
    """
    restaurant = Restaurant.objects.get(slug=restaurantslug)
    food_list = Food.objects.filter(restaurant=restaurant).order_by('name')
    context = {'restaurant': restaurant, 'food_list': food_list}
    return render_to_response('restaurant.html', context,
                              context_instance=RequestContext(request))


def submit_success(request):
    """
    Displays a message for the user indicating that the food form has
    been successfully submitted.
    """
    return render_to_response('submit_success.html',
                              context_instance=RequestContext(request))
